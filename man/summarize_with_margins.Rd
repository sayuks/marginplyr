% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize_with_margins.R
\name{summarize_with_margins}
\alias{summarize_with_margins}
\title{Works like \code{dplyr::summarize()} with margins}
\usage{
summarize_with_margins(
  .data,
  ...,
  .rollup = NULL,
  .by = NULL,
  .cube = NULL,
  .margin_name = "(all)",
  .check_margin_name = is.data.frame(.data),
  .sort = is.data.frame(.data)
)
}
\arguments{
\item{.data}{A data frame or lazy table.
\itemize{
\item Lazy tables created by \code{{arrow}} does not work.
If you want to work with it, it is an easy way to convert to
a duckdb back-end using \code{arrow::to_duckdb()} in advance.
}}

\item{...}{Name-value pairs as used in \code{\link[dplyr:summarise]{dplyr::summarize()}}.}

\item{.rollup}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> Grouping columns which
margins are calculated, starting from the highest parent of the hierarchy.}

\item{.by}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> Additional group
variables without hierarchy to which \code{.margin_name} will \emph{NOT} be added.}

\item{.cube}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> Additional group
variables without hierarchy to which \code{.margin_name} will be added.}

\item{.margin_name}{A string representing margin name
(Defaults to \code{"(all)"}). \code{NA_character_} is also allowed.}

\item{.check_margin_name}{A logical (defaults to \code{is.data.frame(.data)}).
If \code{TRUE}, checks whether the string in \verb{.margin_name' already exists in the column specified by }.rollup\code{or}.cube` and returns an error
if it already exists.}

\item{.sort}{A logical (defaults to \code{is.data.frame(.data)}).
If \code{TRUE}, sort the result by the column order
specified in \code{.by} and \code{.rollup} and \code{.cube}.
This is because pipelines using lazy tables should perform the
SQL \verb{ORDER BY} as last as possible.
As a result of sorting, in the case of lazy tables,
\code{NA} may come first, unlike R.
See \href{https://dbplyr.tidyverse.org/reference/arrange.tbl_lazy.html}{\code{arrange()} documentation of \code{{dbplyr}}}
for details.}
}
\value{
A data frame. If \code{.data} is a lazy table,
the output is also a lazy table.
}
\description{
This function considers each margin (such as total) as a new category,
works like \code{\link[dplyr:summarise]{dplyr::summarize()}}.
See \href{https://sayuks.github.io/marginplyr/vignettes/get_started.html}{Get started}
for more details.
}
\details{
\itemize{
\item This is similar to \code{\link[dplyr:summarise]{dplyr::summarize()}} but creates an additional
\code{.margin_name} category for each grouping variable. It assumes a hierarchy
of groups and the higher level groups should be provided first.
\item Regular groups, not used for totals/subtotals can be provided through
the \code{.by} argument and will be used as parent groups.
\item If you want to create its own total margin (such as \code{"(all)"})
for a variable that is a regular group and has no hierarchy,
specify it with \code{.cube}. If there is more than one \code{.cube},
all combinations of them are generated.
}
}
\section{About returned data}{

\itemize{
\item Missing values are kept as missing.
\item The order of the columns is as follows from left to right:
\code{.by}, \code{.rollup}, \code{.cube} and the remaining columns.
\item Column types specified with \code{.rollup} or \code{.cube}:
\itemize{
\item Columns that are not originally factor or character
(e.g. numeric, integer, logical, .etc) are converted to characters.
This is required to add the \code{.margin_name} category.
\item Originally the factor column (assuming a local data frame):
\itemize{
\item Remains as factor. (If ordered, remains as ordered).
\item The level of the factor depends on the case:
\itemize{
\item If \code{.margin_name} is \emph{\strong{NOT}} a \code{NA_character}
(such as \code{"(all)"}):
\itemize{
\item \code{.margin_name} is added to the
beginning of the level of the factor.
}
\item If \code{.margin_name} is a \code{NA_character}:
\itemize{
\item If the column has \verb{<NA>} in the level:
\itemize{
\item Error occurs. Because, although the values with level
\verb{<NA>} are not equal to \code{NA_character_}, they will be
identical and indistinguishable when merging
\code{NA_character_} as a new category.
}
\item If the column does not have \verb{<NA>} in the level:
\itemize{
\item Just keeps the original level of factor.
\verb{<NA>} is not included in the level.
This is consistent with the default
\code{\link[=factor]{factor()}} behavior (\code{exclude = NA}).
}
}
}
}
}
}
}

\examples{
# Make a hierarchical margin for `cyl`, `vs`.
summarize_with_margins(
  mtcars,
  n = dplyr::n(),
  mpg = mean(mpg, na.rm = TRUE),
  .rollup = c(cyl, vs),
)

# `am` does not create a hierarchy, but is an overall group variable.
summarize_with_margins(
  mtcars,
  n = dplyr::n(),
  mpg = mean(mpg, na.rm = TRUE),
  .rollup = c(cyl, vs),
  .by = am
)

# `gear` creates "(all)" margins on itself.
summarize_with_margins(
  mtcars,
  n = dplyr::n(),
  mpg = mean(mpg, na.rm = TRUE),
  .rollup = c(cyl, vs),
  .by = am,
  .cube = gear
)

# If `.cube` has multiple columns, all combinations are generated.
summarize_with_margins(
  mtcars,
  n = dplyr::n(),
  mpg = mean(mpg, na.rm = TRUE),
  .rollup = c(cyl, vs),
  .by = am,
  .cube = c(gear, carb)
)
}
\references{
\itemize{
\item Online documentation: \href{https://sayuks.github.io/marginplyr/vignettes/get_started.html}{Get started}
\item Main idea is borrowed from \href{https://gist.github.com/moodymudskipper/6347418d82fea2160178422aa574dec2}{this gist}.
}
}
\seealso{
Other summarize and expand data with margins: 
\code{\link{nest_by_with_margins}()},
\code{\link{nest_with_margins}()},
\code{\link{union_all_with_margins}()}
}
\concept{summarize and expand data with margins}
